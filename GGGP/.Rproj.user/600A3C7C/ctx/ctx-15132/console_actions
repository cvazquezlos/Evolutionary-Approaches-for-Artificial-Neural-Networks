{
    "data" : [
        "\nR version 3.5.2 (2018-12-20) -- \"Eggshell Igloo\"\nCopyright (C) 2018 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "[Workspace loaded from ~/GitHub/Evolutionary-Approaches-for-Artificial-Neural-Networks/GGGP/.RData]\n\n",
        "> ",
        "library(\"xlsx\")",
        "> ",
        "library(\"ggplot2\")",
        "Find out what's changed in ggplot2 at https://github.com/tidyverse/ggplot2/releases.\n",
        "> ",
        "library(\"sets\")",
        "Warning message:\n",
        "package ‘sets’ was built under R version 3.5.3 \n",
        "> ",
        "library(\"keras\")",
        "\nAttaching package: ‘keras’\n\n",
        "The following objects are masked from ‘package:sets’:\n\n    %>%, tuple\n\n",
        "> ",
        "library(\"stringr\")",
        "\nAttaching package: ‘stringr’\n\n",
        "The following object is masked from ‘package:sets’:\n\n    %>%\n\n",
        "> ",
        "library(\"gtools\")",
        "> ",
        "# setwd(\"D:/Usuarios/cvazquezlos/GitHub/Genetic-programming-for-Artificial-Neural-Networks/results\")",
        "> ",
        "setwd(\"~/GitHub/Evolutionary-Approaches-for-Artificial-Neural-Networks/results\")",
        "> ",
        "TARGET_FOLDER <- \"./classification/ocean_proximity/partial/\"",
        "> ",
        "BASE_DATA_FRAME <- data.frame(architecture = character(),",
        "+ ",
        "                              saved_model = character(),",
        "+ ",
        "                              acc_train = double(),",
        "+ ",
        "                              acc_validation = double(),",
        "+ ",
        "                              acc_test = double(),",
        "+ ",
        "                              stringsAsFactors = FALSE)",
        "> ",
        "executions <- list.files(TARGET_FOLDER)",
        "> ",
        "bad_executions <- list()",
        "> ",
        "executions_results <- BASE_DATA_FRAME",
        "> ",
        "y <- lapply(executions, function (x) {",
        "+ ",
        "  tryCatch({",
        "+ ",
        "    df = readRDS(paste0(TARGET_FOLDER, \"/\", x, \"/final_population.rds\"))",
        "+ ",
        "  }, error = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  }, warning = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  })",
        "+ ",
        "})",
        "> ",
        "rm(\"y\")",
        "> ",
        "bad_executions <- unlist(bad_executions)",
        "> ",
        "library(\"xlsx\")",
        "> ",
        "library(\"ggplot2\")",
        "> ",
        "library(\"sets\")",
        "> ",
        "library(\"keras\")",
        "> ",
        "library(\"stringr\")",
        "> ",
        "library(\"gtools\")",
        "> ",
        "# setwd(\"D:/Usuarios/cvazquezlos/GitHub/Genetic-programming-for-Artificial-Neural-Networks/results\")",
        "> ",
        "setwd(\"~/GitHub/Evolutionary-Approaches-for-Artificial-Neural-Networks/results\")",
        "> ",
        "TARGET_FOLDER <- \"./classification/ocean_proximity/partial/\"",
        "> ",
        "BASE_DATA_FRAME <- data.frame(architecture = character(),",
        "+ ",
        "                              saved_model = character(),",
        "+ ",
        "                              acc_train = double(),",
        "+ ",
        "                              acc_validation = double(),",
        "+ ",
        "                              acc_test = double(),",
        "+ ",
        "                              stringsAsFactors = FALSE)",
        "> ",
        "executions <- list.files(TARGET_FOLDER)",
        "> ",
        "bad_executions <- list()",
        "> ",
        "executions_results <- BASE_DATA_FRAME",
        "> ",
        "y <- lapply(executions, function (x) {",
        "+ ",
        "  tryCatch({",
        "+ ",
        "    df = readRDS(paste0(TARGET_FOLDER, \"/\", x, \"/execution_results.rds\"))",
        "+ ",
        "  }, error = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  }, warning = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  })",
        "+ ",
        "})",
        "> ",
        "rm(\"y\")",
        "> ",
        "bad_executions <- unlist(bad_executions)",
        "> ",
        "# setwd(\"D:/Usuarios/cvazquezlos/GitHub/Genetic-programming-for-Artificial-Neural-Networks/results\")",
        "> ",
        "setwd(\"~/GitHub/Evolutionary-Approaches-for-Artificial-Neural-Networks/results\")",
        "> ",
        "TARGET_FOLDER <- \"./classification/ocean_proximity/partial\"",
        "> ",
        "BASE_DATA_FRAME <- data.frame(architecture = character(),",
        "+ ",
        "                              saved_model = character(),",
        "+ ",
        "                              acc_train = double(),",
        "+ ",
        "                              acc_validation = double(),",
        "+ ",
        "                              acc_test = double(),",
        "+ ",
        "                              stringsAsFactors = FALSE)",
        "> ",
        "executions <- list.files(TARGET_FOLDER)",
        "> ",
        "bad_executions <- list()",
        "> ",
        "executions_results <- BASE_DATA_FRAME",
        "> ",
        "y <- lapply(executions, function (x) {",
        "+ ",
        "  tryCatch({",
        "+ ",
        "    df = readRDS(paste0(TARGET_FOLDER, \"/\", x, \"/execution_results.rds\"))",
        "+ ",
        "  }, error = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  }, warning = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  })",
        "+ ",
        "})",
        "> ",
        "rm(\"y\")",
        "> ",
        "bad_executions <- unlist(bad_executions)",
        "Error in textConnection(\"rval\", \"w\", local = TRUE) : \n  all connections are in use\n",
        "> ",
        "bad_executions",
        " [1] \"1\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\" \"16\" \"17\" \"18\" \"19\" \"2\"  \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"3\"  \"30\" \"31\" \"32\" \"33\" \"34\"\n[29] \"35\" \"36\" \"37\" \"38\" \"39\" \"4\"  \"40\" \"41\" \"42\" \"43\" \"44\" \"45\" \"46\" \"47\" \"48\" \"49\" \"5\"  \"50\" \"51\" \"52\" \"53\" \"54\" \"55\" \"56\" \"57\" \"58\" \"59\" \"6\" \n[57] \"60\" \"61\" \"62\" \"63\" \"64\" \"65\" \"66\" \"67\" \"68\" \"69\" \"70\" \"71\" \"72\" \"73\" \"74\" \"75\" \"76\" \"77\" \"78\" \"8\"  \"9\" \n",
        "> ",
        "library(\"xlsx\")",
        "> ",
        "library(\"ggplot2\")",
        "> ",
        "library(\"sets\")",
        "> ",
        "library(\"keras\")",
        "> ",
        "library(\"stringr\")",
        "> ",
        "library(\"gtools\")",
        "> ",
        "# setwd(\"D:/Usuarios/cvazquezlos/GitHub/Genetic-programming-for-Artificial-Neural-Networks/results\")",
        "> ",
        "setwd(\"~/GitHub/Evolutionary-Approaches-for-Artificial-Neural-Networks/results\")",
        "> ",
        "TARGET_FOLDER <- \"./classification/ocean_proximity/partial\"",
        "> ",
        "BASE_DATA_FRAME <- data.frame(architecture = character(),",
        "+ ",
        "                              saved_model = character(),",
        "+ ",
        "                              acc_train = double(),",
        "+ ",
        "                              acc_validation = double(),",
        "+ ",
        "                              acc_test = double(),",
        "+ ",
        "                              stringsAsFactors = FALSE)",
        "> ",
        "executions <- list.files(TARGET_FOLDER)",
        "> ",
        "bad_executions <- list()",
        "> ",
        "executions_results <- BASE_DATA_FRAME",
        "> ",
        "y <- lapply(executions, function (x) {",
        "+ ",
        "  tryCatch({",
        "+ ",
        "    df = readRDS(paste0(TARGET_FOLDER, \"/\", x, \"/execution_results.rds\"))",
        "+ ",
        "  }, error = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  }, warning = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  })",
        "+ ",
        "})",
        "> ",
        "rm(\"y\")",
        "> ",
        "bad_executions <- unlist(bad_executions)",
        "> ",
        "library(\"xlsx\")",
        "> ",
        "library(\"ggplot2\")",
        "> ",
        "library(\"sets\")",
        "> ",
        "library(\"keras\")",
        "> ",
        "library(\"stringr\")",
        "> ",
        "library(\"gtools\")",
        "> ",
        "# setwd(\"D:/Usuarios/cvazquezlos/GitHub/Genetic-programming-for-Artificial-Neural-Networks/results\")",
        "> ",
        "setwd(\"~/GitHub/Evolutionary-Approaches-for-Artificial-Neural-Networks/results\")",
        "> ",
        "TARGET_FOLDER <- \"./classification/ocean_proximity/partial/\"",
        "> ",
        "BASE_DATA_FRAME <- data.frame(architecture = character(),",
        "+ ",
        "                              saved_model = character(),",
        "+ ",
        "                              acc_train = double(),",
        "+ ",
        "                              acc_validation = double(),",
        "+ ",
        "                              acc_test = double(),",
        "+ ",
        "                              stringsAsFactors = FALSE)",
        "> ",
        "executions <- list.files(TARGET_FOLDER)",
        "> ",
        "# setwd(\"D:/Usuarios/cvazquezlos/GitHub/Genetic-programming-for-Artificial-Neural-Networks/results\")",
        "> ",
        "setwd(\"~/GitHub/Evolutionary-Approaches-for-Artificial-Neural-Networks/results\")",
        "> ",
        "TARGET_FOLDER <- \"./classification/ocean_proximity/partial/\"",
        "> ",
        "BASE_DATA_FRAME <- data.frame(architecture = character(),",
        "+ ",
        "                              saved_model = character(),",
        "+ ",
        "                              acc_train = double(),",
        "+ ",
        "                              acc_validation = double(),",
        "+ ",
        "                              acc_test = double(),",
        "+ ",
        "                              stringsAsFactors = FALSE)",
        "> ",
        "executions <- list.files(TARGET_FOLDER)",
        "> ",
        "executions",
        " [1] \"1\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\" \"16\" \"17\" \"18\" \"19\" \"2\"  \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"3\"  \"30\" \"31\" \"32\" \"33\" \"34\"\n[29] \"35\" \"36\" \"37\" \"38\" \"39\" \"4\"  \"40\" \"41\" \"42\" \"43\" \"44\" \"45\" \"46\" \"47\" \"48\" \"49\" \"5\"  \"50\" \"51\" \"52\" \"53\" \"54\" \"55\" \"56\" \"57\" \"58\" \"59\" \"6\" \n[57] \"60\" \"61\" \"62\" \"63\" \"64\" \"65\" \"66\" \"67\" \"68\" \"69\" \"70\" \"71\" \"72\" \"73\" \"74\" \"75\" \"76\" \"77\" \"78\" \"8\"  \"9\" \n",
        "> ",
        "bad_executions <- list()",
        "> ",
        "executions_results <- BASE_DATA_FRAME",
        "> ",
        "y <- lapply(executions, function (x) {",
        "+ ",
        "  tryCatch({",
        "+ ",
        "    df = readRDS(paste0(TARGET_FOLDER, x, \"/execution_results.rds\"))",
        "+ ",
        "  }, error = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  }, warning = function(cond) {",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  })",
        "+ ",
        "})",
        "> ",
        "rm(\"y\")",
        "> ",
        "bad_executions <- list()",
        "> ",
        "executions_results <- BASE_DATA_FRAME",
        "> ",
        "y <- lapply(executions, function (x) {",
        "+ ",
        "  tryCatch({",
        "+ ",
        "    df = readRDS(paste0(TARGET_FOLDER, x, \"/execution_results.rds\"))",
        "+ ",
        "  }, error = function(cond) {",
        "+ ",
        "    print(cond)",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  }, warning = function(cond) {",
        "+ ",
        "    print(cond)",
        "+ ",
        "    bad_executions <<- c(bad_executions, x)",
        "+ ",
        "  })",
        "+ ",
        "})",
        "<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n",
        "<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n",
        "<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<simpleError in gzfile(file, \"rb\"): all connections are in use>\n<",
        "\n",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        3,
        2
    ]
}